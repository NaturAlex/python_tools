##email configurations
#check if email in HTTP request is blacklisted or not. This parameter is used by all createProfile and updateProfile API
iam.email.blacklisted.email=blackListTest1@ftTest.com|blackListTest100@ftTest.com
iam.email.blacklist.domain=^(.*)@((?i)abc.com|xyz.com|sri.co.in|guerrillamailblock.com|qq.com|yopmail.com|mailinator.com|gmial.com|gmaul.com|gmaol.com|yaoo.com|gmail.com.com|gmail.vom|gmail.cm|gmail.come|hitmail.com|yahoo|gamail.com|cloud.com|yhoo.com|hormail.com|yahoo.co|gimail.com|gail.com|yhaoo.com|tmomail.com|icould.com|gmail.cim|icloud.con|gmaill.com|hotmai.com|hmail.com|hotmail.con|yaho.com|gmsil.com|ail.com|gmal.com|gmil.com|gnail.com|yahoo.con|gamil.com|gmai.com|tmomail.net|gmail.con|tmail.com|tmobile.com|test.com|vitalheart.info)$


#alarm
iam.alarms.enable=true

iam.alarm.severityOID=1.3.6.1.4.1.193.214.1.1.1.22.100
iam.alarm.payloadOID=1.3.6.1.4.1.193.214.1.1.1.22.101

#check if email in HTTP request matches regular expression, so ensure the email is in right format. This parameter is used by all API which require email as input
iam.validation.email.regex=^[a-zA-Z0-9\\!\\#\\$\\%\\&\\~\\*\\+\\\-\\/\\=\\?\\^\\_\\.]+@([a-zA-Z0-9\\-]{1\,63}\\.)+([a-zA-Z0-9]{2\,63})$

##Date Configurations
iam.dob.format=yyyy-MM-dd

## Pagination attributes 
iam.pagination.contract.maxpagesize=100

iam.customer.restricted.fields=businessUnit,ssn,ivrPin,status,statusDate,creationDate,customerGroup,parentCustomerNumber,firstname,lastname,middlename,employeeNumber,prefCommunicationMethod,websiteLanguage,dateOfBirth,gender,isCreditVerified,isIdVerified,lastupdatedtimestamp
iam.iamprofile.restricted.fields=emailLastupdatedtimestamp,password,pwdLastupdatedtimestamp,tempPassword,tempPwdExpTimestamp,firstname,lastname,creationTimestamp,tosAcceptTimestamp,isManualLocked,manualLockedReason,manualLockedTimestamp,status,statusLastupdatedtimestamp,actEmailExpTimestamp,language,notificationPreference,securityanswer1,securityanswer2,securityanswer3,securityanswer4,securityanswer5,securityanswer6,securityanswer7,saLastupdatedtimestamp,pin,pinLastupdatedtimestamp,dateOfBirth,dobLastupdatedtimestamp,annualEipDisclosure,emailNewsLetter,autoGeneratedFlag,offerDeliveryMethods,lastActivatedTimestamp,lastupdatedtimestamp,offerses,permissionsForGranteeUserid,permissionsForGrantorUserid,tempPin,mustChangePwdTimestamp,oneTimePasswordLastUpdatedTimestamp,genderLastUpdatedTimestamp,tempPinExpTimestamp,securityReviewTime
iam.billingaccount.restricted.fields=businessLine,status,statusDate,billcyclePeriod,paymentOption,billingStatementLanguage,primaryLine,country,state,county,city,streetAddress,zipcode,fraudLock,lastupdatedtimestamp,customerBaRels
#iam.contract.restricted.fields=imsiStatus,imsiStartDate,imsiExpirationDate,status,statusDate,activationDate,cancellationDate,transactionType,contractType,ratePlan,loginCount,lastLoginTimestamp,optInSilentTimestamp,registrationStatus,operatorId,accounttypeSubtype,assignedProductId,lineOfServiceCode,authFailureCount,lastAuthFailureTimestamp,prepaidPinFailureCount,lastPrepaidPinFailureTime,ssnFailureCount,lastSsnFailureTimestamp,smsPinFailureCount,lastSmsPinFailureTimestamp,optOutIba,isReceivingOffer,csn,experienceType,iccidPin,imei,meid,oemAuthenticationToken,voWifiEnabled,mcaEnabled,mwiEnabled,isPrimary,tcAcceptDate,pinCode,pinCodeExpTimestamp,migrationStatus,lastupdatetimestamp,bcContract,sdgShortCode,contractFeatureProducts,contractEntityInfos,customerContractRels,contractBaRels,contractFeatureProduct
iam.contract.restricted.fields=imsiStatus,imsiStartDate,imsiExpirationDate,statusDate,activationDate,cancellationDate,transactionType,contractType,ratePlan,loginCount,lastLoginTimestamp,optInSilentTimestamp,registrationStatus,operatorId,accounttypeSubtype,assignedProductId,lineOfServiceCode,authFailureCount,lastAuthFailureTimestamp,prepaidPinFailureCount,lastPrepaidPinFailureTime,ssnFailureCount,lastSsnFailureTimestamp,smsPinFailureCount,lastSmsPinFailureTimestamp,optOutIba,isReceivingOffer,csn,experienceType,iccidPin,imei,meid,oemAuthenticationToken,voWifiEnabled,mcaEnabled,mwiEnabled,isPrimary,tcAcceptDate,pinCode,pinCodeExpTimestamp,migrationStatus,lastupdatetimestamp,bcContract,sdgShortCode,contractFeatureProducts,contractEntityInfos,customerContractRels,contractFeatureProduct,contractAddresses,lineLinkedTimestamp,lineUseLastUpdatedTimestamp,lineAccountLastUpdatedTimestamp,msisdnLastUpdatedTimestamp,imsiLastUpdatedTimestamp,imeiLastUpdatedTimestamp
iam.system.auth.header=System_Authorization
iam.system.auth.header.value=SYSTEM_IAM_huyw93mph78dtehud78

#Regex
#check if userName in HTTP request matches regular expression, so ensure the userName is in right format. This parameter is used by all API which require userName as input
iam.validation.user.name.regex=^(?=.{6\,30}$)[a-zA-Z]+[\\d]{0\,}([_.]{0\,1}[a-zA-Z0-9]+)+$
iam.validation.uid.regex=U-.*

iam.international.code=US
iam.security.answer.delimiter=~~
iam.security.answer.strip=[\\s\\.\,]
#Regex to validate security answer
iam.business.password.security.policy=^[a-zA-Z0-9]+(.*?)
#Regex to validate weak password
iam.business.password.policy=^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9\\x7E\\x21\\x40\\x23\\x24\\x25\\x5E\\x26\\x2A\\x28\\x29\\x2F\\x3A\\x3B\\x3F\\x2C\\x2E\\x3C\\x3E\\x5F\\x2D]{8\,25}$|[A-Za-z0-9\\x7E\\x21\\x40\\x23\\x24\\x25\\x5E\\x26\\x2A\\x28\\x29\\x2F\\x3A\\x3B\\x3F\\x2C\\x2E\\x3C\\x3E\\x5F\\x2D]{26\,128}$

#Dual Provisioning related configurations
iam.oracle.to.ldif.mapping=iam_ldif_class_mapping.xml
iam.oracle.to.ldif.boolean.mapping=iam_ldif_boolean_mapping.xml
iam.notification.dualProvisioning.logging.API=PasswordReset,PasswordChanged
iam.dual.provisioning.enabled=false
iam.dualprovisioning.create.iam.profile.enabled=true 
iam.dualprovisioning.create.tmo.profile.enabled=true
iam.dualprovisioning.create.offer.enabled=true
iam.dualprovisioning.delete.iam.profile.enabled=true
iam.dualprovisioning.delete.offer.enabled=true
iam.dualprovisioning.delete.tmo.profile.enabled=true
iam.dualprovisioning.link.tmo.profile.enabled=true
iam.dualprovisioning.unlink.tmo.profile.enabled=true 
iam.dualprovisioning.update.iam.profile.enabled=true
iam.dualprovisioning.update.offer.enabled=true
iam.dualprovisioning.change.email.profile.enabled=true
iam.dualprovisioning.update.tmo.profile.enabled=true

#Property to check DB contract state with the requested Contract state in ChangeContractState API.
iam.contract.state.notallowed.regex=|

#iam.query.tmo.profile.fields=
iam.max.msisdn=9999


#Provide the oracle date columns in below property for ldif
iam.oracle.to.ldif.mapping.date.fields=IAMDateOfBirth,EmailLastUpdatedTimestamp,PasswordLastUpdatedTimestamp,DateOfBirthLastUpdatedTimestamp,SecurityAnswerLastUpdatedTimestamp,ManualLockedTimestamp,tosacceptancedate,tmbillingbirthdate,tmbirthdate,tmauthfailurecountchanged,tmlogintimestamp,tmactivationdate,tmcancellationdate,tmTCAcceptDate,BC_LAST_EMAIL_UPDATETIMESTAMP,TempPasswordExpTimestamp,CreationTimestamp,tmAnswerFailCountTimestamp,tmAuthzipFailcountTimestamp,tmPinSsnFailcountTimestamp,tmBillcpLastupdatedtimestamp,tmloginstatuschangedate,tmlastemailupdate,tmTempPwdExp,lastUpdatedTime,tminitpwresettime,tmwsenotifydate,TosAcceptTimestamp,IAMOptInSilentTimestamp
iam.oracle.to.ldif.mapping.boolean.fields=IAMAnnualEIPDisclosure,IAMEmailNewsletter,isactive,Status,isaccountlocked,tmOptoutIBA,IAMAutoGeneratedFlag,mcaEnabled,mwiEnabled,voWifiEnabled
iam.ldif.supported.date.formats=yyyyMMddHHmmss\'Z\',yyyy-MM-dd\'T\'HH:mm:ss\'Z\',yyyy-MM-dd HH:mm:ss,yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\',EEE MMM dd HH:mm:ss z yyyy, yyyy-MM-dd

iam.contract.active.validation.rule.for.migrated.user=A,S,L

#indicates what status means active for a none-migrated user
iam.contract.active.validation.rule.for.non.migrated.user=(status=A|status=s)

#Country code used for normalize an MSISDN
iam.country.code=1
iam.profile.ignore.case.fields=email,username

#Configurations to support tmmlcusttype
tmo.profile.tmmlcusttype.billingaccount.values=PAH,SL,NPAH_P,GMP_M
tmo.profile.tmmlcusttype.contract.values=NPAH_NP,NPAH_R,GMP_NM_NP,GMP_NM_P
tmo.profile.tmmlcusttype.prepaid.supported.values=PAH,SL
tmo.profile.tmmlcusttype.postpaid.supported.values=PAH,SL,NPAH_P,NPAH_NP,NPAH_R,GMP_M,GMP_NM_P,GMP_NM_NP
tmo.profile.customerRoleReconcilation.issupported=true
tmo.profile.postpaid.prefix=POSTPAID
tmo.profile.prepaid.prefix=PREPAID

#Set the role  based on contract SubscriberType and MlCustType: "SubscriberType"+"."+"MlCustType"
POSTPAID.PAH=AO
POSTPAID.SL=AO
POSTPAID.NPAH_P=AM
POSTPAID.NPAH_NP=CAV
POSTPAID.NPAH_R=R
POSTPAID.GMP_M=AO
POSTPAID.GMP_NM_NP=R
POSTPAID.GMP_NM_P=AV

PREPAID.PAH=AO
PREPAID.SL=AO

iam.pin.generated.length=6

### Temporary Password Configurations ####
iam.splchar=!@#$%^&*_=+-/
iam.maxlen=15
iam.minlen=8
iam.password.ttl=90

##credential_management Scope configuration
#whether need to check subscope. if value is true,validator will check subscope with entityAttributeToSubscopeMapping.
iam.scope.credential_management.subscopeChecking.enable = false
#the scopeKey of credential_management
iam.scope.credential_management.scopeKey = credential_management
#the iamProfile attributes needed to check
iam.scope.credential_management.scopeMapping.iamprofile.entityAttribute  =mustChangePasswordFlag,mustChangePasswordReason,mustChangePasswordTimestamp,passwordHistoryLength,oneTime2ndFactorValidation,passwordMaxAge
#the mapping of iamProfile attributes to subscope
iam.scope.credential_management.scopeMapping.iamprofile.entityAttributeToSubscopeMapping =mustChangePasswordFlag:mustChangePasswordFlag,mustChangePasswordReason:mustChangePasswordReason,mustChangePasswordTimestamp:mustChangePasswordTimestamp,passwordHistoryLength:passwordHistoryLength,oneTime2ndFactorValidation:oneTime2ndFactorValidation,passwordMaxAge:passwordMaxAge
#the lineProfile(bcContract) attributes needed to check
iam.scope.credential_management.scopeMapping.lineprofile.entityAttribute =
#the mapping of lineProfile(bcContract) attributes to subscope
iam.scope.credential_management.scopeMapping.lineprofile.entityAttributeToSubscopeMapping =

## tmo id merge scope configuration
iam.biz.scope.tmo.id.merge=provisioning

##password and securityAnswer encrytor key configuration
#the password key in request data
iam.encrytor.password.key = password,tmUserPassword,tmuserpassword,oldPassword,newPassword,IAMUserPassword
#the securityAnswer key without index in request data,  encrytor will add the index to get real securityAnswer key. e.g. securityA -> securityA1,securityA2...securityA7
iam.encrytor.securityAnswer.key = securityA,tmsecanswer,secuanswer,securityQuestionAnswer,securityanswer
#the mapping of request key to bean key.
iam.encrytor.requestKeyToBeanKey.mapping = password:password,tmUserPassword:bcPassword,tmuserpassword:bcPassword,oldPassword:password,newPassword:password,IAMUserPassword:password,securityA:securityanswer,tmsecanswer:bcSecurityAnswer,secuanswer:securityanswer,securityQuestionAnswer:securityanswer,securityanswer:securityanswer

#The mapping from API name to http method for using header X-Include-Fields:scope_ex
iam.includeFields.apiNameToMethod.mapping=querytmoprofilesbyban:GET

####### password blacklist validate configuration ###########
#whether use the static blacklist to validate the password
iam.biz.password.validate.static.blacklist.enabled=true
#whether use the dynamic blacklist to validate the password
iam.biz.password.validate.dynamic.blacklist.enabled=true

#for circuit breaker
iam.biz.coreSize=50
iam.biz.metrics.rollingStats.timeInMilliseconds=60000
iam.biz.circuitBreaker.enabled=true
iam.biz.circuitBreaker.sleepWindowInMilliseconds=10000
iam.biz.circuitBreaker.requestVolumeThreshold=100
iam.biz.circuitBreaker.errorThresholdPercentage=10
iam.biz.execution.isolation.thread.timeoutInMilliseconds=5000
iam.biz.metrics.rollingPercentile.timeInMilliseconds=60000

# for query authenticator availability api
# multiple values are supported, separated by space
iam.biz.query.authenticator.supported.amr=sms_temp_pin tax_id ssn_4 pin email_temp_pin

iam.biz.authentication.counter.supported.amr=symantec_otp,push_bio,signup

# weather to set the security_review_timestamp of the non-sys gen profile
iam.biz.security.review.dormancy.period.enabled=false

# security_review_timestamp revies dormancy period day
iam.biz.security.review.dormancy.period.day=180

# for query authenticator availability api
# multiple values are supported, separated by ,
# whether email_temp_pin is valid or not
iam.biz.profile.valid.status.list=A,I,S,F

# flag to decide if generate system profile
iam.biz.create.systemgenprofile.enabled=false

#TCIIPP-15197 timeout for ESOA circuit breaker shall be set to 800 ms
iam.biz.execution.isolation.thread.timeoutInMilliseconds.esoaservice=800

# The length of token in transaction log
iam.biz.transaction.log.token.length=12
# The char which will replace comma in transaction log
iam.biz.transaction.log.comma.replacement.char=\u0020

#limit service reset counter api param counter
iam.biz.reset.counter.list=sms_temp_pinFailure,email_temp_pinFailure,push_temp_pinFailure,pinFailure,changepwdSuccess,sessionCreation,ssn_4Failure,tax_idFailure,passwordFailure,securityQuestionFailure,bioFailure,push_bioFailure,symantec_otpFailure,googleOTPFailure,recCodeFailure,tmpPwdFailure,tenant_passwordFailure,sendSmsOTPLimit,sendEmailOTPLimit,smsOTPFailure,emailOTPFailure,faceFailure,ban_pinFailure

#Regular expression for tos content on-boarding tool params validation ,the default value of regex is [A-Za-z0-9_.]+
iam.biz.tos.onboard.param.regex=[A-Za-z0-9_.]+
