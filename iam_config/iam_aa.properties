iam.aa.iamprofile.init.status=I

iam.aa.pinCodeExpDatePlus=1

#Get value from this param when PASSWORD_HISTORY_LENGTH of IAM_PROFILE is null.
#Passwork update number of times
iam.aa.defaultHistoryLength=1

#Enable the checking between new password and history password.
#If the flag is false, it means update password directly without comparing, then password won't be putted in history table
iam.aa.passwordHistoryCheck=true

#define the the max value of password history length
#Used to check the max number of password history entries
iam.aa.passwordHistoryMaxLength=10

iam.aa.activation.email.ttl.desktop=10
iam.aa.activation.email.ttl.mobile=10

iam.oauth.kpi.enabled=true

#CR81, if isLineUseEnabled is true and lineUseDBSource is BSCS, Check MSISDN API will query the lineUse attribute from ESOA
iam.aa.isLineUseEnabled=true
iam.aa.lineUseDBSource=BSCS
# when lineAccountSource=BSCS, Check MSISDN API will not query ESOA
iam.aa.isLineAccountEnabled=true
iam.aa.lineAccountDBSource=BSCS
#this key and value is same with PDU for validateSSN
iam.contract.lineusedbsource=BSCS

# Logging Attributes
# value for KPI/API logging componeneName attribute
iam.authorize.component.name.for.logging=Authorize

#Regular expression for checking userId ,the default value of regex is ^U(-[0-9a-zA-Z]+){5}
iam.aa.passwordBlacklistValidation.userId.regex=^U-.*


#TCIIPP-15249 link msisdn will NOT allow contracts with Suspended status AND HOT substatus.This config should be regex,such as ^(S:AA|S:BB)$
iam.link.msisdn.not.allowed.contract.status.substatus=^(S:HOT)$

#following config is for sendActivationEmail API, the API will validate baseURL in the request against
#below pre-defined URL list. The URLs shall be seperated with ","
iam.activationemail.validBaseUrls=www.ericsson.com,www.myTMO.com

#add configurations for validate SSN
iam.contract.activation.min.age.hour=336
iam.profile.min.age.hour=48
iam.profile.pin.min.age.hour=0
iam.profile.email.min.age.hour=24
iam.line.linked.min.age.hour=48
iam.contract.lineaccount.notallowed=
iam.contract.lineuse.notallowed=fax,duplicate,virtual
iam.contract.linedbcachetime=86400
# whether or not to check lineuse and lineaccount in blacklist
iam.contract.is.line.account.enable=true
iam.contract.is.line.use.enable=true

#add configuration for validate taxId
iam.validateTaxId.allowed.bcMlCustTypes=GMP_M,GMP_NM_NP,GMP_NM_P
iam.biz.bc.ml.cust.type=GMP_M,GMP_NM_NP,GMP_NM_P

#add configurations for checkMsisdn version2
iam.checkmsisdn.retrytime=3

# amr mapping for counter service
iam.aa.counter.amr.mapping=symantec_otp:2FV|ssn_4:2FV|tax_id:2FV|push_bio:2FV|signup:2FV|sms_temp_pin:2FV|email_temp_pin:2FV|pin:2FV|temp_pin:2FV|prepaid_pin:2FV|billing_zipcode:2FV|default_2fv_amr:2FV|dat:2FV|ban_pin:2FV|push_temp_pin:2FV|tenant_password:AF
# amr mapping for counter service which does not need to check softlock
iam.aa.counter.amr.nosoftlockcheck=symantec_otp|ssn_4|tax_id|sms_temp_pin|email_temp_pin|pin|temp_pin|prepaid_pin|billing_zipcode|default_2fv_amr|push_temp_pin
# amr mapping for soft lock counter checking
iam.biz.soft.lock.counter.amr.mapping=symantec_otp:AF BAF|ssn_4:AF BAF|tax_id:AF BAF|tenant_password:AF

# amr mapping for hard lock counter checking
iam.biz.hard.lock.counter.amr.mapping=symantec_otp:LS BLS 2FV SPF|ssn_4:LS BLS 2FV SPF|tax_id:LS BLS 2FV SPF|pin:2FV|temp_pin:2FV|sms_temp_pin:2FV|email_temp_pin:2FV|prepaid_pin:2FV|billing_zipcode:2FV|default_2fv_amr:2FV|push_temp_pin:2FV

# counter service supported AMRs, multiple AMRs are separated by comma, case insensitive
iam.biz.counter.amr.supported=symantec_otp,ssn_4,tax_id,push_bio,signup,sms_temp_pin,email_temp_pin,pin,temp_pin,prepaid_pin,billing_zipcode,default_2fv_amr,dat,ban_pin,push_temp_pin,tenant_password

# request contains amr in this configurable list, counter service does not clean up onetime 2fv flag even authentication result is success
iam.biz.counter.amr.skipCleanOnetime2FVFlag=prepaid_pin,billing_zipcode,sms_temp_pin,email_temp_pin,push_temp_pin,tenant_password

#
iam.biz.counter.skip.notification.amr=tenant_password

# List of operatorIds which need to skip period check in checking MSISDN activation and linkage, multiple operatorIds are separated by comma
iam.contract.skip.period.check.operatorids=4000

iam.dbThrottling.enable=true
iam.dbThrottling.timePeriod=1
iam.dbThrottling.capacity=20

# this value is separated by comma
iam.biz.rateplanid.for.lineaccount=WEB_CONNECT

# switch of request logging.
iam.biz.request.logging.enabled=true
# whether log all APIs.
iam.biz.request.logging.all.api.enabled=false

# config the request logging script file, case sensitive
iam.biz.request.logging.processing.script=RequestLogging.groovy

# which API(s) shall use request logging
# multiple API names are separated by comma, case sensitive
# API names are base on another config: iam.biz.request.logging.apipath.apimethod.apiname.mapping
iam.biz.request.logging.rule.apinames=CHECK_MSISDN_V1,CHECK_MSISDN_V2,QUERY_PROFILE_BY_BAN

# this entry describes the relationship of API name and API URI and request method
# multiple APIs' configuration are separated by comma
# And each API's configuration includes three parts which are separated by colon, the rule is:
# 1st part is the URI of specific API, 2nd part is http method, 3rd part is API name(this part can be customized)
iam.biz.request.logging.apipath.apimethod.apiname.mapping=/v1/checkmsisdn:GET:CHECK_MSISDN_V1,/v2/checkmsisdn:GET:CHECK_MSISDN_V2,/v1/querytmoprofilesbyban:GET:QUERY_PROFILE_BY_BAN

# this entry determines how many cache keys are supported in request logging FW
# if this entry or the value of this entry is absent, request logging FW will use default value 20
# At present, request logging FW only supports one groovy script, and caches 1 groovy script in cache
# so this entry is not mandatory at current phase
iam.biz.request.logging.cache.capacity=20

# this entry determines how long the groovy cache is expired, time unit is second
# if this entry or the value of this entry is absent, request logging FW will use default value 86400
iam.biz.request.logging.cache.expire.time=86400

# this entry determines the max concurrent threads of executing request logging groovy script
# commonly, this value shall base on total traffic of APIs which require request logging in an application per node
# if this entry is absent, request logging FW will use default value 20
iam.biz.request.logging.thread.pool.size=20

# supported AMRs of lockCheck api, multiple AMRs are separated by comma
iam.biz.counter.lockCheck.supportedAmrList=symantec_otp,push_bio